allprojects {
    group 'org.metanalysis'
    version '0.1-SNAPSHOT'

    buildscript {
        ext {
            kotlinVersion = '1.1.1'
            dokkaVersion = '0.9.13'
            jacksonVersion = '2.8.7'
            jdtVersion = '3.12.2'
            junitVersion = '4.12'
        }

        repositories {
            mavenCentral()
            jcenter()
        }
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: 'jacoco'
}

subprojects {
    buildscript {
        dependencies {
            classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
            classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokkaVersion"
        }
    }

    apply plugin: 'java'
    apply plugin: 'maven'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
        testCompile "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"
        testCompile "junit:junit:$junitVersion"
    }

    jar {
        from rootProject.file('LICENSE')
        from rootProject.file('NOTICE')
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    jacocoTestReport {
        dependsOn test

        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    dependsOn {
        subprojects*.jacocoTestReport
    }

    executionData fileTree(project.rootDir.absolutePath)
            .include("**/build/jacoco/*.exec")

    subprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}
