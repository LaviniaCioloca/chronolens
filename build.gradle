buildscript {
    ext {
        kotlin_version = '1.1.3-2'
        dokka_version = '0.9.15'
        jackson_version = '2.8.9'
        jdt_version = '3.12.3'
        junit_version = '4.12'
    }

    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:$dokka_version"
    }
}

allprojects {
    group 'org.metanalysis'
    version '0.1.8'

    repositories {
        mavenCentral()
        jcenter()
    }

    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.dokka'
    apply plugin: 'jacoco'

    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7

    dependencies {
        implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

        testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
        testImplementation "junit:junit:$junit_version"
    }

    dokka {
        moduleName = project.name
        includes = ['Module.md']
        impliedPlatforms = ['JVM']
        jdkVersion = 7
        outputFormat = 'javadoc'

        linkMapping {
            dir = "src/main/kotlin"
            url = "https://github.com/andreihh/${rootProject.name}/blob/master/${project.name}/$dir"
            suffix = "#L"
        }
    }

    jar {
        from rootProject.file('LICENSE')
        from rootProject.file('NOTICE')
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: dokka) {
        classifier = 'javadoc'
        from dokka.outputDirectory
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }

    jacocoTestReport {
        dependsOn test

        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }
}

task codeCoverageReport(type: JacocoReport) {
    dependsOn {
        allprojects*.jacocoTestReport
    }

    executionData fileTree(project.rootDir.absolutePath)
            .include("**/build/jacoco/*.exec")

    allprojects.each {
        sourceSets it.sourceSets.main
    }

    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven'

    configurations {
        apiElements {
            outgoing.variants.getByName('classes').artifact(
                    file: compileKotlin.destinationDir,
                    type: ArtifactTypeDefinition.JVM_CLASS_DIRECTORY,
                    builtBy: compileKotlin
            )
        }
    }
}

apply plugin: 'application'

mainClassName = 'org.metanalysis.Main'

dependencies {
    implementation project(':metanalysis-core')
    runtimeOnly project(':metanalysis-git')
    runtimeOnly project(':metanalysis-java')
}
